{
    "openapi": "3.0.0",
    "info": {
        "title": "Gondor Chic API",
        "description": "A Laravel-based API application for Magic VenteStock - the e-commerce platform for Minas Tirith's magical products. Features inventory management, order processing, and delivery tracking for fairy dust, mithril shirts, and other enchanted items sold through Gondor's retail network.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://gondor-chic-api.mendrika.dev",
            "description": "API Server"
        },
        {
            "url": "https://gondor-chic-api.mendrika.dev"
        }
    ],
    "paths": {
        "/api/produits-du-jour": {
            "get": {
                "tags": [
                    "Produits"
                ],
                "summary": "Get today's featured magical products",
                "description": "Returns a list of magical products that are featured for today",
                "operationId": "getProduitsDuJour",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Produit"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/produits": {
            "get": {
                "tags": [
                    "Produits"
                ],
                "summary": "Get all magical products",
                "description": "Returns a list of all magical products in the inventory",
                "operationId": "getAllProduits",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Produit"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account with the provided information",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pseudo",
                                    "nom",
                                    "prenom",
                                    "mot_de_passe"
                                ],
                                "properties": {
                                    "pseudo": {
                                        "description": "Unique username",
                                        "type": "string",
                                        "example": "gandalf_le_gris"
                                    },
                                    "nom": {
                                        "description": "Last name",
                                        "type": "string",
                                        "example": "Gandalf"
                                    },
                                    "prenom": {
                                        "description": "First name",
                                        "type": "string",
                                        "example": "Mithrandir"
                                    },
                                    "mot_de_passe": {
                                        "description": "Password (minimum 6 characters)",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "image_url": {
                                        "description": "Optional profile image URL",
                                        "type": "string",
                                        "example": "gandalf.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur créé avec succès"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "description": "Authenticate user and return JWT access token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pseudo",
                                    "mot_de_passe"
                                ],
                                "properties": {
                                    "pseudo": {
                                        "description": "Username",
                                        "type": "string",
                                        "example": "gandalf_le_gris"
                                    },
                                    "mot_de_passe": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Identifiants invalides"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Produit": {
                "title": "Produit",
                "description": "Magical product model",
                "required": [
                    "id",
                    "reference",
                    "libelle",
                    "prix",
                    "quantite_en_stock"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier of the product",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reference": {
                        "description": "Product reference code",
                        "type": "string",
                        "example": "REF001"
                    },
                    "libelle": {
                        "description": "Product name/label",
                        "type": "string",
                        "example": "Vin Elrond"
                    },
                    "est_du_jour": {
                        "description": "Whether this product is featured today",
                        "type": "boolean",
                        "example": false
                    },
                    "prix": {
                        "description": "Product price in GondAriary",
                        "type": "string",
                        "example": "34.90"
                    },
                    "quantite_en_stock": {
                        "description": "Available quantity in stock",
                        "type": "integer",
                        "example": 12
                    },
                    "image_url": {
                        "description": "URL of the product image",
                        "type": "string",
                        "example": "vin_elrond.jpg"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model for authentication and profile management",
                "required": [
                    "id",
                    "pseudo",
                    "nom",
                    "prenom"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier of the user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pseudo": {
                        "description": "Unique username",
                        "type": "string",
                        "example": "gandalf_le_gris"
                    },
                    "nom": {
                        "description": "User's last name",
                        "type": "string",
                        "example": "Gandalf"
                    },
                    "prenom": {
                        "description": "User's first name",
                        "type": "string",
                        "example": "Mithrandir"
                    },
                    "image_url": {
                        "description": "URL of the user's profile image",
                        "type": "string",
                        "example": "gandalf.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Produits",
            "description": "API Endpoints for managing magical products"
        },
        {
            "name": "Users",
            "description": "API Endpoints for user authentication and management"
        }
    ]
}